version: '3'

services:
  gateway:
    build: ./gateway
    restart: always
    hostname: gateway
    env_file:
      - .env
    depends_on:
      - kafka
    ports:
      - "8000:8000"
    networks:
      - backend
      - frontend
  task:
    build: ./microservices/task
    restart: always
    hostname: task
    depends_on:
      - gateway
    env_file:
      .env
    networks:
      - backend
    links:
      - db
  token:
    build: ./microservices/token
    restart: always
    hostname: token
    env_file:
      - .env
    depends_on:
      - gateway
    networks:
      - backend
    links:
      - db
  mailer:
    build: ./microservices/mailer
    restart: always
    hostname: mailer
    depends_on:
      - gateway
    env_file:
      - .env
    networks:
      - backend
  permission:
    build: ./microservices/permission
    restart: always
    hostname: permission
    depends_on:
      - gateway
    env_file:
      - .env
    networks:
      - backend
  user:
    build: ./microservices/user
    restart: always
    hostname: user
    depends_on:
      - gateway
    env_file:
      - .env
    networks:
      - backend
    links:
      - mailer
      - db
  db:
    image: 'mongo:3.7'
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ./docker/db/data/db-files:/data/db
      - ./docker/db/init/:/docker-entrypoint-initdb.d/
    ports:
      - '27017:27017'
    networks:
      - backend

  zookeeper:
    restart: always
    image: bitnami/zookeeper:3
    ports:
      - 2181:2181
    volumes:
      - ./docker/zookeeper/data:/var/lib/bitnami/zookeeper/data
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_JMX_HOSTNAME: "localhost"
      KAFKA_JMX_PORT: 31000
    networks:
      - backend

  kafka:
    image: 'docker.io/bitnami/kafka:2'
    volumes:
      - ./docker/kafka/data:/var/lib/bitnami/kafka/data
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      # KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      KAFKA_CFG_LISTENERS: LISTENER_DOCKER_INTERNAL://:9092,LISTENER_DOCKER_EXTERNAL://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:9092,LISTENER_DOCKER_EXTERNAL://kafka:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_BROKER_ID: 1
    depends_on:
      - zookeeper
    networks:
      - backend
      - frontend
networks:
  backend:
    driver: bridge
  frontend:
    external:
      name: infrastructure